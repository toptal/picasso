name: Publish Packages to NPM
description: |
  Routes package publishing to the appropriate workflow. Trusted publishing is
  tied to a single workflow, this is why the central publishing workflow is needed.

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      alpha:
        description: Whether to publish alpha packages
        required: false
        default: true
        type: boolean
      branch:
        description: Branch to publish
        required: false
        default: master
        type: string

permissions:
  contents: read
  id-token: write
  issues: write
  pull-requests: write

jobs:
  publish-release-packages:
    name: Publish release packages to NPM
    if: ${{ !inputs.alpha }}
    runs-on: ubuntu-latest
    steps:
      - name: Empty step
        run: echo "Release packages are not supported yet"

  publish-alpha-packages:
    name: Publish alpha packages to NPM
    if: ${{ inputs.alpha || (github.event.issue.pull_request && github.event.comment.body == '@toptal-bot run package:alpha-release') }}
    runs-on: ubuntu-latest
    env:
      STATUS_CHECK_NAME: Publish Alpha Package
      STATUS_TARGET_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get branch info
        id: branch
        if: ${{ github.event_name == 'issue_comment' }}
        # Same as xt0rted/pull-request-comment-branch@v2.0.0
        uses: xt0rted/pull-request-comment-branch@d97294d304604fa98a2600a6e2f916a84b596dc7

      - name: Set status check - pending
        if: ${{ github.event_name == 'issue_comment' }}
        # Same as actions/github-script@v7
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.issue;
            await github.rest.repos.createCommitStatus({
              repo,
              owner,
              state: 'pending',
              sha: "${{ steps.branch.outputs.head_sha }}",
              context: process.env.STATUS_CHECK_NAME,
              target_url: process.env.STATUS_TARGET_URL
            })

      - name: Add reaction to issue comment
        if: ${{ github.event_name == 'issue_comment' }}
        # Same as actions/github-script@v7
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.issue;
            await github.rest.reactions.createForIssueComment({
              owner,
              repo,
              comment_id: context.payload.comment.id,
              content: '+1'
            });

      - name: Trigger alpha packages publishing
        id: alpha-package
        uses: ./.github/actions/build-publish-alpha-package
        with:
          branch: ${{ github.event_name == 'issue_comment' && steps.branch.outputs.head_ref || inputs.branch }}
          root-folder: '.'

      - name: Post comment with package versions
        if: ${{ github.event_name == 'issue_comment' && success() }}
        # Same as actions/github-script@v7
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b
        env:
          versions: ${{ steps.alpha-package.outputs.versions }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { repo: { owner, repo }, issue } = context
            const { versions } = process.env

            const body = "Your alpha package is ready ðŸŽ‰<br/>" + versions.split(' ').reduce((acc, version) => {
              acc += `\`yarn add ${version}\`<br/>`
              return acc
            }, '')

            await github.rest.issues.createComment({ issue_number: issue.number, owner, repo, body })

      - name: Set status check - success / failure / error
        if: ${{ github.event_name == 'issue_comment' }}
        # Same as actions/github-script@v7
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.issue;

            const status = "${{ job.status }}";
            const state = status === 'cancelled' ? 'error' : status;

            await github.rest.repos.createCommitStatus({
              repo,
              owner,
              state,
              sha: "${{ steps.branch.outputs.head_sha }}",
              context: process.env.STATUS_CHECK_NAME,
              target_url: process.env.STATUS_TARGET_URL
            })
