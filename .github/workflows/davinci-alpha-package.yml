name: Release Alpha Package (alpha package release PoC)

on:
  push:
    branches:
      - FF-49-enhance-publishing

jobs:
  triggerPrWorkflow:
    name: Trigger PR Workflow
    runs-on: ubuntu-latest
    environment: alpha-package
    permissions:
      contents: write
      id-token: write
      actions: write
      issues: write
      pull-requests: write
    env:
      STATUS_TARGET_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - name: Get branch and sha
        id: get-branch
        run: |
          echo "branch=${{ github.head_ref }}" >> $GITHUB_OUTPUT
          echo "sha=${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Configure git user
        run: |
          git config --global user.email "bot@toptal.com"
          git config --global user.name "toptal-bot"

      - name: Check out the latest code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref }}
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.18
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Set up npm
        shell: bash
        run: |
          npm install -g npm@11.5.1
          npm --version

      - name: Build packages
        run: yarn build:package

      - name: Build and publish canary @toptal/base-tailwind
        id: alpha-package
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # Create canary version with the specified prefix
          CANARY_VERSION="${CURRENT_VERSION}-alpha-FF-49-enhance-publishing-b89c1ab50.$(date +%s)"
          
          echo "Publishing canary version: $CANARY_VERSION"

          cd ./packages/base-tailwind/dist-package

          # Update version in package.json using node
          node -e "const pkg = require('./package.json'); pkg.version = process.argv[1]; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2) + '\n');" "$CANARY_VERSION"
          
          # Publish with canary tag (skip prepublishOnly since package is already built)
          npm publish --tag canary --ignore-scripts --loglevel=verbose

          # Output the published version for later steps
          echo "versions={\"@toptal/base-tailwind\":\"$CANARY_VERSION\"}" >> $GITHUB_OUTPUT

      - name: Alpha package — Handle success
        if: ${{ success() }}
        uses: actions/github-script@v7
        env:
          versions: ${{ steps.alpha-package.outputs.versions }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const versions = JSON.parse(process.env.versions || '{}');
            
            let message = '✅ **Alpha packages published successfully!**\n\n';
            
            if (Object.keys(versions).length > 0) {
              message += '📦 **Published versions:**\n';
              for (const [packageName, version] of Object.entries(versions)) {
                message += `- \`${packageName}@${version}\`\n`;
              }
              message += '\n';
            }

            message += '💡 You can install these alpha versions using:\n';
            message += '```bash\n';
            message += 'npm install @toptal/package-name@alpha-version\n';
            message += '```';

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: context.payload.pull_request.number,
              body: message
            });

      - name: Alpha package — Handle failure
        if: ${{ failure() }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: context.payload.pull_request.number,
              body: '❌ **Alpha package publishing failed**\n\nPlease check the [workflow run](${{ env.STATUS_TARGET_URL }}) for details.'
            });
