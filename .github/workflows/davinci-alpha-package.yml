name: Release Alpha Package

on:
  pull_request:
    types: [opened, edited]

jobs:
  triggerPrWorkflow:
    name: Trigger PR Workflow
    if: >
      github.event.issue.pull_request
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.TOPTAL_DEVBOT_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN_PUBLISH }}
      STATUS_CHECK_NAME: Publish Alpha Package
      STATUS_TARGET_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - id: branch
        uses: xt0rted/pull-request-comment-branch@v1.4.0

      - name: Specify branch
        id: get-branch
        run: |
          echo "::set-output name=branch::${{ github.head_ref }}"
          echo "::set-output name=sha::${{ github.head_sha }}"

      - name: Configure git user
        run: |
          git config --global user.email "bot@toptal.com"
          git config --global user.name "toptal-bot"

      - name: Checkout the latest code
        uses: actions/checkout@v3
        with:
          token: ${{ env.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

      - name: Set status check - pending
        uses: actions/github-script@v6
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.issue;
            await github.rest.repos.createCommitStatus({
              repo,
              owner,
              state: 'pending',
              sha: "${{ github.event.pull_request.head.sha }}",
              context: process.env.STATUS_CHECK_NAME,
              target_url: process.env.STATUS_TARGET_URL
            })

      - name: Trigger alpha package
        id: alpha-package
        uses: toptal/davinci-github-actions/build-publish-alpha-package@fx-3737-need-to-add-input-parameter-to-davinci-alpha-package-gh-action
        with:
          npm-token: ${{ env.NPM_TOKEN }}
          branch: ${{ github.event.pull_request.head.sha }}

      - name: Alpha package â€” Handle success
        if: ${{ success() }}
        uses: actions/github-script@v6
        env:
          versions: ${{ steps.alpha-package.outputs.versions }}
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            const { repo: { owner, repo }, issue } = context
            const { versions } = process.env
            const body = "Your alpha package is ready ðŸŽ‰<br/>" + versions.split(' ').reduce((acc, version) => {
              acc += `\`yarn add ${version}\`<br/>`
              return acc
            }, '')
            await github.rest.issues.createComment({ issue_number: issue.number, owner, repo, body })

      - name: Set status check - success / failure / error
        if: ${{ always() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.issue;

            const status = "${{ job.status }}";
            const state = status === 'cancelled' ? 'error' : status;

            await github.rest.repos.createCommitStatus({
              repo,
              owner,
              state,
              sha: "${{ steps.get-branch.outputs.sha }}",
              context: process.env.STATUS_CHECK_NAME,
              target_url: process.env.STATUS_TARGET_URL
            })
