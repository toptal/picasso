name: Picasso - PR merge CI

on:
  pull_request:
    branches: [master]

jobs:
  directories: # Job that list subdirectories
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ steps.set-dirs.outputs.dir }} # generate output name dir by using inner step output
    steps:
      - uses: actions/checkout@v2
      - id: set-dirs # Give it an id to handle to get step outputs in the outputs key above
        run: cd packages && echo "::set-output name=dir::$(ls -d */ | jq -R -s -c 'split("\n")[:-1]')"
        # Define step output named dir base on ls command transformed to JSON thanks to jq
  loop:
    runs-on: ubuntu-latest
    needs: [directories] # Depends on previous job
    strategy:
      matrix:
        dir: ${{fromJson(needs.directories.outputs.dir)}} # List matrix strategy from directories dynamically
    steps:
      - run: echo ${{matrix.dir}}

  specs:
    if: contains(github.event.pull_request.labels.*.name , 'WIP') != true
    runs-on: ubuntu-latest

    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    container:
      image: cypress/included:5.3.0
      options: --privileged # thanks to this we can increase number of file watchers below

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Increase max_user_watches
        run: echo fs.inotify.max_user_watches=524288 | tee -a /etc/sysctl.conf && sysctl -p

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies (from network)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn policies set-version
          yarn install --frozen-lockfile --ignore-optional

      - name: Install Dependencies (from cache)
        if: steps.yarn-cache.outputs.cache-hit == 'true'
        run: |
          yarn policies set-version
          yarn install --frozen-lockfile --ignore-optional --offline

      - name: Danger
        run: yarn davinci ci danger --conventionalCommits

      - name: Lint
        run: yarn lint

      - name: Jest Tests
        run: yarn test-ci

      - name: Check build
        run: yarn build:package

      - name: Cypress Tests
        run: yarn cypress:ci
