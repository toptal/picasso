name: Consulting the Oracle

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master # triggers the flow for every PR to master
      - 'feature/**' # triggers the flow for a PR to a branch like feature/v9

    types:
      - synchronize # PR was updated
      - opened # PR was open
      - reopened # PR was closed and is now open again
      - ready_for_review # PR was converted from draft to open

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TOPTAL_DEVBOT_TOKEN: ${{ secrets.TOPTAL_DEVBOT_TOKEN }}

jobs:
  build-docker-image:
    if: ${{ github.event.pull_request.head.ref != 'changeset-release/master' }}
    name: Build Picasso docker image
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout davinci GHAs
        uses: actions/checkout@v2
        with:
          repository: toptal/davinci-github-actions
          ref: v1
          token: ${{ env.TOPTAL_DEVBOT_TOKEN }}
          path: ./.github/actions/

      - uses: ./.github/actions/build-push-image
        env:
          GITHUB_TOKEN: ${{ env.TOPTAL_DEVBOT_TOKEN }}
          GCR_ACCOUNT_KEY: ${{ secrets.GCR_ACCOUNT_KEY }}
        with:
          sha: ${{ github.event.pull_request.head.sha }}
          image_name: picasso
          environment: temploy
          docker_file: ./Dockerfile

  tests:
    if: ${{ github.event.pull_request.head.ref != 'changeset-release/master' }}
    name: PR Checks
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout davinci GHAs
        uses: actions/checkout@v2
        with:
          repository: toptal/davinci-github-actions
          ref: v1
          token: ${{ env.TOPTAL_DEVBOT_TOKEN }}
          path: ./.github/actions/


      - uses: ./.github/actions/yarn-install

      - name: Danger
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn davinci ci danger

      - name: Lint
        run: yarn lint

      - name: Type Check
        run: yarn typecheck

      - name: Jest Tests
        run: yarn test:unit:ci

      - name: Build packages
        run: yarn build:package

      - name: Cypress Tests # requires the packages to be built before running
        uses: ./.github/actions/integration-tests
        env:
          HAPPO_API_KEY: ${{ secrets.HAPPO_API_KEY }}
          HAPPO_API_SECRET: ${{ secrets.HAPPO_API_SECRET }}

  deploy-docs:
    if: ${{ github.event.pull_request.head.ref != 'changeset-release/master' }}
    name: Deploy Picasso docs
    runs-on: ubuntu-latest
    needs: [ build-docker-image ]

    steps:
      - name: Trigger doc deployment job
        uses: toptal/jenkins-job-trigger-action@1.0.0
        env:
          BRANCH: ${{ github.event.pull_request.head.ref }}
          PR_ID: ${{ github.event.pull_request.number }}
        with:
          jenkins_url: https://jenkins-build.toptal.net/
          jenkins_user: toptal-jenkins
          jenkins_token: ${{ secrets.TOPTAL_JENKINS_BUILD_TOKEN }}
          proxy: ${{ env.HTTP_PROXY }}
          job_name: picasso-docs
          job_params: |
            {
              "BRANCH": "${{ env.BRANCH }}",
              "PR_ID": "${{ env.PR_ID }}"
            }
          job_timeout: '3600'

  old-visual-tests:
    if: ${{ github.event.pull_request.head.ref != 'changeset-release/master' }}
    name: Old Visual Tests
    runs-on: ubuntu-latest
    needs: [ build-docker-image ]

    steps:
      - name: Trigger doc deployment job
        uses: toptal/jenkins-job-trigger-action@1.0.0
        env:
          BRANCH: ${{ github.event.pull_request.head.ref }}
          COMMIT_ID: ${{ github.event.pull_request.head.sha }}
          PR_ID: ${{ github.event.pull_request.number }}
        with:
          jenkins_url: https://jenkins-build.toptal.net/
          jenkins_user: toptal-jenkins
          jenkins_token: ${{ secrets.TOPTAL_JENKINS_BUILD_TOKEN }}
          proxy: ${{ env.HTTP_PROXY }}
          job_name: picasso-pr-specs
          job_params: |
            {
              "BRANCH": "${{ env.BRANCH }}",
              "COMMIT_ID": "${{ env.COMMIT_ID }}",
              "PR_ID": "${{ env.PR_ID }}"
            }
          job_timeout: '3600'

