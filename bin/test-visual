#!/usr/bin/env sh

BLUE='\033[0;34m'
GREEN='\033[0;32m'
NC='\033[0m'

CWD="$(dirname "$0")"
cd "$CWD/../"
BASE_PATH=$(pwd)

BIN_PATH="$BASE_PATH/node_modules/.bin"
JEST_ENV="$BASE_PATH/puppeteer/environment.js"
JEST_CONFIG="$BASE_PATH/puppeteer/puppeteer.jest.config.js"
JEST_TEST_ENV="visual"
DIFF_OUTPUT_PATH="$BASE_PATH/__diff_output__/*"

function build_storybook() {
  echo -e "${BLUE} Building storybook ... ${NC}"
  set -x
  TEST_ENV=$JEST_TEST_ENV yarn build:storybook
  set +x
}

function run_jest() {
  if [[ "$*" == *"-u"* ]]; then
    echo -e "${BLUE} Updating snapshots to a current version ... ${NC}"
  else
    echo -e "${BLUE} Verifying snapshots with a current version ... ${NC}"
  fi

  set -x
  $BIN_PATH/jest --testEnvironment=$JEST_ENV --config=$JEST_CONFIG --maxWorkers=30% $@ || exit 1
  set +x
}

START=$(date +%s)
build_storybook
END=$(date +%s)
echo -e "${GREEN} Build storybook:" $(expr $END - $START) "sec ${NC}"

START=$(date +%s)
# filter not supported --build-image argument
JEST_PARAMS=`echo $@ | sed 's/--build-image//'`
run_jest $JEST_PARAMS
END=$(date +%s)
echo -e "${GREEN} Running visual tests:" $(expr $END - $START) "sec ${NC}"
