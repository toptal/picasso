#!/usr/bin/env bash

BLUE='\033[34m'
NC='\033[0m'
RED='\033[31m'
REPO_NAME='picasso'
PICASSO_IMAGE="gcr.io/toptal-hub/${REPO_NAME}"
PKG_VERSION=`node -p "require('./package.json').version"`
GIT_SHA=`git rev-parse HEAD`

IS_GCLOUD_INSTALLED=`which gcloud`
if [[ $IS_GCLOUD_INSTALLED == "" ]]; then
  echo -e "${RED}'gcloud' is not installed ${NC}"
  echo -e ""
  echo -e "Please install 'gcloud' and follow instructions \
to auth docker to be able to pull images from gcr.io/hub:

https://toptal-core.atlassian.net/wiki/spaces/IE/pages/337838085/Docker#Docker-docker-loginLogintoToptal'sprivateregistry

Or you can build image locally by running:

yarn visual:test -u --build-image
"

  exit 1
fi

IS_GCLOUD_AUTHENTICATED=`gcloud auth list --filter=status:ACTIVE --format="value(account)"`
if [[ $IS_GCLOUD_AUTHENTICATED != *"@toptal.com"* ]]; then
  echo -e "${RED}'docker' is not authenticated by 'gcloud'${NC}"
  echo -e ""
  echo -e "Please follow instructions to auth docker to be able \
to pull images from gcr.io/hub:

https://toptal-core.atlassian.net/wiki/spaces/IE/pages/337838085/Docker#Docker-docker-loginLogintoToptal'sprivateregistry

Or you can build image locally by running:

yarn visual:test -u --build-image
"

  exit 1
fi

if [[ "$*" == *"--build-image"* ]]; then
  echo -e "${BLUE} Rebuilding docker image ... ${NC}"
  docker build -t $PICASSO_IMAGE:$GIT_SHA .
fi

DOCKER_CMD="docker run -t -i --rm --name $REPO_NAME \
 -v ${PWD}/src:/app/src \
 -v ${PWD}/puppeteer:/app/puppeteer \
 -v ${PWD}/.storybook:/app/.storybook \
 -v ${PWD}/bin:/app/bin \
 -v ${PWD}/__diff_output__:/app/__diff_output__ \
 -e NPM_TOKEN=$NPM_TOKEN \
 -e GIT_SHA=$GIT_SHA \
 $PICASSO_IMAGE:$GIT_SHA"

echo -e "${BLUE} Running command inside docker ... ${NC}"

set -x
$DOCKER_CMD "$@"
exit $?
