#!/usr/bin/env node

const exec = require('child_process').execSync
const fs = require('fs-extra')
const path = require('path')

const readme = fs.readFileSync(path.resolve(__dirname, '../README.md'), 'utf-8')

const parseVersion = version => {
  versionSplit = version.split('-')
  return `${versionSplit[0]}--${versionSplit[1]}`
}

let packageJson = JSON.parse(
  fs.readFileSync(path.resolve(__dirname, '../package.json'), 'utf-8')
)
const previousVersion = parseVersion(packageJson.version)

exec('yarn release:pre', {
  stdio: 'inherit'
})

packageJson = JSON.parse(
  fs.readFileSync(path.resolve(__dirname, '../package.json'), 'utf-8')
)
const newVersion = parseVersion(packageJson.version)

exec('git push --tags')

exec('./node_modules/.bin/gren r --override', {
  stdio: 'inherit'
})

exec('./node_modules/.bin/gren c --override', {
  stdio: 'inherit'
})

const newReadme = readme.replace(previousVersion, newVersion)
fs.writeFileSync(path.resolve(__dirname, '../README.md'), newReadme)

exec('git add CHANGELOG.md README.md package.json')
exec(
  `git commit -m "[chore] generate CHANGELOG for ${
    packageJson.version
  }" --no-verify`
)
exec('git push origin HEAD:master')
